{"ast":null,"code":"import _defineProperty from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/roshan/dev/frame/frontend/pages/upload/index.js\",\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Input, Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from 'next/router';\n\nvar R = require('rambda');\n\nvar axios = require('axios');\n\nvar BACKEND_URL = process.env.BACKEND_URL;\n\nvar post = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!R.isNil(formData.Images)) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(\"Error\");\n            throw 'Please select at least one image to upload';\n\n          case 3:\n            axios.post(\"\".concat(BACKEND_URL, \"/upload\"), formData).then(function (res) {\n              return res;\n            })[\"catch\"](function (err) {\n              console.log(err);\n              throw 'Error uploading files.';\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function post(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nvar normFile = function normFile(e) {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  _s2();\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setErrorState = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      success = _useState3[0],\n      setSuccessState = _useState3[1];\n\n  var onFinish = function onFinish(values) {\n    var _s = $RefreshSig$();\n\n    console.log(\"Received values of form: \", values);\n    setErrorMessage(\"\");\n    setErrorState(null);\n    post(values).then(_s(function (res) {\n      _s();\n\n      setSuccessState(true);\n      var router = useRouter();\n      router.push(\"\".concat(gallery, \"/\").concat(res.body[\"protected\"] ? 'protected' : '', \"gid=\").concat(res.body.gid));\n    }, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n      return [useRouter];\n    }))[\"catch\"](function (err) {\n      setErrorMessage(err);\n      setErrorState(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      type: \"flex\",\n      align: \"middle\",\n      justify: \"center\",\n      span: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Upload \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" save the link(and password), you won't be seeing it again \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 65\n        }, this), \"links are only valid for 24hrs, though i doubt anyone's going to use this \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"success\",\n        message: \"Upload successful, redirecting to gallery\",\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"error\",\n        message: errorMessage,\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({\n        name: \"validate_other\"\n      }, formItemLayout), {}, {\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"Images\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: normFile,\n            noStyle: true,\n            children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n              name: \"files\",\n              beforeUpload: function beforeUpload() {\n                return false;\n              },\n              accept: \"image/*\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-drag-icon\",\n                children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-text\",\n                children: \"Click or drag file to this area to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-hint\",\n                children: \"Supports single or bulk upload.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UploadPage, \"x69DPF2aJQCAZIBrEZ9sXbgFVrE=\");\n\n_c = UploadPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"sources":["/Users/roshan/dev/frame/frontend/pages/upload/index.js"],"names":["Form","Input","Button","Upload","Row","Col","Alert","React","useState","InboxOutlined","useRouter","R","require","axios","BACKEND_URL","process","env","post","formData","isNil","Images","console","log","then","res","err","formItemLayout","labelCol","span","wrapperCol","normFile","e","Array","isArray","fileList","UploadPage","error","setErrorState","errorMessage","setErrorMessage","success","setSuccessState","onFinish","values","router","push","gallery","body","gid","minHeight","offset"],"mappings":"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","sourcesContent":["import { Form, Input,  Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from 'next/router'\nconst R = require('rambda');\nconst axios = require('axios');\n\nconst BACKEND_URL = process.env.BACKEND_URL\n\nconst post = async(formData) => {\n\t\tif(R.isNil(formData.Images)) {\n\t\t\tconsole.log(\"Error\")\n\t\t\tthrow 'Please select at least one image to upload'\n\t\t}\n\t\taxios.post(`${BACKEND_URL}/upload`, formData)\n\t\t\t.then((res) => res)\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t\tthrow 'Error uploading files.'\n\t\t\t})\n}\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  let [error, setErrorState] = useState(null)\n  let [errorMessage, setErrorMessage] = useState(\"\")\n  let [success, setSuccessState] = useState(false)\n\n  const onFinish = (values) => {\n\tconsole.log(\"Received values of form: \", values);\n\tsetErrorMessage(\"\") \n\tsetErrorState(null)\n\n\tpost(values)\n    .then((res) => {\n      setSuccessState(true)\n      const router = useRouter()\n      router.push(`${gallery}/${res.body.protected ? 'protected' : ''}gid=${res.body.gid}`)\n      })\n    .catch((err) => { \n      setErrorMessage(err) \n      setErrorState(true)\n    })\n    };\n\n\n\n  return (\n    <Row type=\"flex\" align=\"middle\" justify=\"center\"style={{ minHeight: \"100vh\" }}>\n      <Col type=\"flex\" align=\"middle\" justify=\"center\" span={8}>\n\t  \t<h1> Upload </h1>\n\t\t<p> save the link(and password), you won't be seeing it again <br />\n\t\t\t links are only valid for 24hrs, though i doubt anyone's going to use this </p>\n\t  \t{ \n\t\t\tsuccess &&\n\t\t\t<Alert\n\t\t\ttype=\"success\"\n\t\t\tmessage=\"Upload successful, redirecting to gallery\"\n\t\t\tbanner\n\t\t\tclosable\n\t\t\t/>\n\t\t}\n\n\t\t{\n\t\t\terror && \n\t\t\t<Alert\n\t\t\ttype=\"error\"\n\t\t\tmessage={errorMessage}\n\t\t\tbanner\n\t\t\tclosable\n\t\t\t/>\n\t\t}\n\n\n    <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\n          \n\t\t<Form.Item\n\t\t\tlabel=\"Password\">\n\t\t\t<Input.Password/>\n\t\t</Form.Item>\n\n          <Form.Item label=\"Image\">\n            <Form.Item\n              name=\"Images\"\n              valuePropName=\"fileList\"\n              getValueFromEvent={normFile}\n              noStyle\n            >\n              <Upload.Dragger\n                name=\"files\"\n                beforeUpload={() => false}\n                accept=\"image/*\"\n              >\n                <p className=\"ant-upload-drag-icon\">\n                  <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">\n                  Click or drag file to this area to upload\n                </p>\n                <p className=\"ant-upload-hint\">\n                  Supports single or bulk upload.\n                </p>\n              </Upload.Dragger>\n            </Form.Item>\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n              offset: 6,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}