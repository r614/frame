{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/roshan/dev/frame/frontend/pages/upload/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Input, Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from \"next/router\";\n\nconst R = require(\"rambda\");\n\nconst axios = require(\"axios\");\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nconst post = async formData => {\n  if (R.isNil(formData.Images)) {\n    console.log(\"Error\");\n    throw \"Please select at least one image to upload\";\n  }\n\n  axios.post(`${BACKEND_URL}/upload`, formData).then(res => res).catch(err => {\n    console.log(err);\n    throw \"Error uploading files.\";\n  });\n};\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nconst normFile = e => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  let {\n    0: error,\n    1: setErrorState\n  } = useState(null);\n  let {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(\"\");\n  let {\n    0: success,\n    1: setSuccessState\n  } = useState(false);\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n    let b64Array = [];\n\n    const convert = file => {\n      const reader = new FileReader();\n      b64Array.push(reader.readAsDataURL(file));\n    };\n\n    values.Files.map(val => convert(val.originFileObj));\n    console.log(values.Files);\n    setErrorMessage(\"\");\n    setErrorState(null);\n    post(values).then(res => {\n      setSuccessState(true);\n      const router = useRouter();\n      router.push(`${gallery}/${res.body.protected ? \"protected\" : \"\"}gid=${res.body.gid}`);\n    }).catch(err => {\n      setErrorMessage(err);\n      setErrorState(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      type: \"flex\",\n      align: \"middle\",\n      justify: \"center\",\n      span: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Upload \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"save the link(and password), you won't be seeing it again \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 69\n        }, this), \"links are only valid for 24hrs, though i doubt anyone's going to use this\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"success\",\n        message: \"Upload successful, redirecting to gallery\",\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"error\",\n        message: errorMessage,\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({\n        name: \"validate_other\"\n      }, formItemLayout), {}, {\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          label: \"Password\",\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"Images\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n            name: \"files\",\n            beforeUpload: () => false,\n            accept: \"image/*\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Supports single or bulk upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/roshan/dev/frame/frontend/pages/upload/index.js"],"names":["Form","Input","Button","Upload","Row","Col","Alert","React","useState","InboxOutlined","useRouter","R","require","axios","BACKEND_URL","process","env","post","formData","isNil","Images","console","log","then","res","catch","err","formItemLayout","labelCol","span","wrapperCol","normFile","e","Array","isArray","fileList","UploadPage","error","setErrorState","errorMessage","setErrorMessage","success","setSuccessState","onFinish","values","b64Array","convert","file","reader","FileReader","push","readAsDataURL","Files","map","val","originFileObj","router","gallery","body","protected","gid","minHeight","offset"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from \"next/router\";\nconst R = require(\"rambda\");\nconst axios = require(\"axios\");\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nconst post = async (formData) => {\n  if (R.isNil(formData.Images)) {\n    console.log(\"Error\");\n    throw \"Please select at least one image to upload\";\n  }\n  axios\n    .post(`${BACKEND_URL}/upload`, formData)\n    .then((res) => res)\n    .catch((err) => {\n      console.log(err);\n      throw \"Error uploading files.\";\n    });\n};\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  let [error, setErrorState] = useState(null);\n  let [errorMessage, setErrorMessage] = useState(\"\");\n  let [success, setSuccessState] = useState(false);\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n\n    let b64Array = []\n    const convert = (file) => { \n      const reader = new FileReader();\n      b64Array.push(reader.readAsDataURL(file));\n    }\n\n    values.Files.map(val => convert(val.originFileObj))\n\n    console.log(values.Files)\n    setErrorMessage(\"\");\n    setErrorState(null);\n\n    post(values)\n      .then((res) => {\n        setSuccessState(true);\n        const router = useRouter();\n        router.push(\n          `${gallery}/${res.body.protected ? \"protected\" : \"\"}gid=${\n            res.body.gid\n          }`\n        );\n      })\n      .catch((err) => {\n        setErrorMessage(err);\n        setErrorState(true);\n      });\n  };\n\n  return (\n    <Row\n      type=\"flex\"\n      align=\"middle\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Col type=\"flex\" align=\"middle\" justify=\"center\" span={8}>\n        <h1> Upload </h1>\n        <p>\n          {\" \"}\n          save the link(and password), you won't be seeing it again <br />\n          links are only valid for 24hrs, though i doubt anyone's going to use\n          this{\" \"}\n        </p>\n        {success && (\n          <Alert\n            type=\"success\"\n            message=\"Upload successful, redirecting to gallery\"\n            banner\n            closable\n          />\n        )}\n\n        {error && <Alert type=\"error\" message={errorMessage} banner closable />}\n\n        <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\n          <Form.Item name=\"password\" label=\"Password\">\n            <Input.Password />\n          </Form.Item>\n\n            <Form.Item\n              name=\"Images\"\n              valuePropName=\"fileList\"\n              getValueFromEvent={normFile}\n              noStyle\n            >\n              <Upload.Dragger\n                name=\"files\"\n                beforeUpload={() => false}\n                accept=\"image/*\"\n              >\n                <p className=\"ant-upload-drag-icon\">\n                  <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">\n                  Click or drag file to this area to upload\n                </p>\n                <p className=\"ant-upload-hint\">\n                  Supports single or bulk upload.\n                </p>\n              </Upload.Dragger>\n            </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n              offset: 6,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}