{"ast":null,"code":"import _defineProperty from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/roshan/dev/frame/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/roshan/dev/frame/frontend/pages/upload/index.js\",\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Input, Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from \"next/router\";\n\nvar R = require(\"rambda\");\n\nvar axios = require(\"axios\");\n\nvar BACKEND_URL = process.env.BACKEND_URL;\n\nvar post = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!R.isNil(formData.Images)) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(\"Error\");\n            throw \"Please select at least one image to upload\";\n\n          case 3:\n            axios.post(\"\".concat(BACKEND_URL, \"/upload\"), formData).then(function (res) {\n              return res;\n            })[\"catch\"](function (err) {\n              console.log(err);\n              throw \"Error uploading files.\";\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function post(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar formItemLayout = {\n  labelCol: {\n    span: 4\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\n\nvar normFile = function normFile(e) {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  _s2();\n\n  var _useState = useState(null),\n      error = _useState[0],\n      setErrorState = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      success = _useState3[0],\n      setSuccessState = _useState3[1];\n\n  var onFinish = function onFinish(values) {\n    var _s = $RefreshSig$();\n\n    console.log(\"Received values of form: \", values);\n    var b64Array = [];\n\n    var convert = function convert(file) {\n      var reader = new FileReader();\n      b64Array.push(reader.readAsBinaryString(file));\n    };\n\n    values.fileList.forEach(function (file, index) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        file.base64 = e.target.result;\n      };\n\n      reader.readAsDataURL(file.originFileObj);\n    });\n    convert(values.images[0].originFileObj);\n    console.log(b64Array);\n    setErrorMessage(\"\");\n    setErrorState(null);\n    post(values).then(_s(function (res) {\n      _s();\n\n      setSuccessState(true);\n      var router = useRouter();\n      router.push(\"\".concat(gallery, \"/\").concat(res.body[\"protected\"] ? \"protected\" : \"\", \"gid=\").concat(res.body.gid));\n    }, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n      return [useRouter];\n    }))[\"catch\"](function (err) {\n      setErrorMessage(err);\n      setErrorState(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"center\",\n    style: {\n      minHeight: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      type: \"flex\",\n      align: \"middle\",\n      justify: \"center\",\n      span: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Upload \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"save the link(and password), you won't be seeing it again \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 69\n        }, this), \"links are only valid for 24hrs, though i doubt anyone's going to use this\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"success\",\n        message: \"Upload successful, redirecting to gallery\",\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"error\",\n        message: errorMessage,\n        banner: true,\n        closable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({\n        name: \"validate_other\"\n      }, formItemLayout), {}, {\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          label: \"Password\",\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"images\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n            name: \"files\",\n            beforeUpload: function beforeUpload() {\n              return false;\n            },\n            accept: \"image/*\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Supports single or bulk upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UploadPage, \"x69DPF2aJQCAZIBrEZ9sXbgFVrE=\");\n\n_c = UploadPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"sources":["/Users/roshan/dev/frame/frontend/pages/upload/index.js"],"names":["Form","Input","Button","Upload","Row","Col","Alert","React","useState","InboxOutlined","useRouter","R","require","axios","BACKEND_URL","process","env","post","formData","isNil","Images","console","log","then","res","err","formItemLayout","labelCol","span","wrapperCol","normFile","e","Array","isArray","fileList","UploadPage","error","setErrorState","errorMessage","setErrorMessage","success","setSuccessState","onFinish","values","b64Array","convert","file","reader","FileReader","push","readAsBinaryString","forEach","index","onload","base64","target","result","readAsDataURL","originFileObj","images","router","gallery","body","gid","minHeight","offset"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Upload, Row, Col, Alert } from \"antd\";\nimport React, { useState } from \"react\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport { useRouter } from \"next/router\";\nconst R = require(\"rambda\");\nconst axios = require(\"axios\");\n\nconst BACKEND_URL = process.env.BACKEND_URL;\n\nconst post = async (formData) => {\n  if (R.isNil(formData.Images)) {\n    console.log(\"Error\");\n    throw \"Please select at least one image to upload\";\n  }\n  axios\n    .post(`${BACKEND_URL}/upload`, formData)\n    .then((res) => res)\n    .catch((err) => {\n      console.log(err);\n      throw \"Error uploading files.\";\n    });\n};\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst normFile = (e) => {\n  console.log(\"Upload event:\", e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nexport default function UploadPage() {\n  let [error, setErrorState] = useState(null);\n  let [errorMessage, setErrorMessage] = useState(\"\");\n  let [success, setSuccessState] = useState(false);\n\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n\n    let b64Array = []\n    const convert = (file) => { \n      const reader = new FileReader();\n      b64Array.push(reader.readAsBinaryString(file));\n    }\n\n    values.fileList.forEach(function (file, index) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        file.base64 = e.target.result;\n      };\n      reader.readAsDataURL(file.originFileObj);\n    });\n    \n    convert(values.images[0].originFileObj)\n\n    console.log(b64Array)\n    setErrorMessage(\"\");\n    setErrorState(null);\n\n    post(values)\n      .then((res) => {\n        setSuccessState(true);\n        const router = useRouter();\n        router.push(\n          `${gallery}/${res.body.protected ? \"protected\" : \"\"}gid=${\n            res.body.gid\n          }`\n        );\n      })\n      .catch((err) => {\n        setErrorMessage(err);\n        setErrorState(true);\n      });\n  };\n\n  return (\n    <Row\n      type=\"flex\"\n      align=\"middle\"\n      justify=\"center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Col type=\"flex\" align=\"middle\" justify=\"center\" span={8}>\n        <h1> Upload </h1>\n        <p>\n          {\" \"}\n          save the link(and password), you won't be seeing it again <br />\n          links are only valid for 24hrs, though i doubt anyone's going to use\n          this{\" \"}\n        </p>\n        {success && (\n          <Alert\n            type=\"success\"\n            message=\"Upload successful, redirecting to gallery\"\n            banner\n            closable\n          />\n        )}\n\n        {error && <Alert type=\"error\" message={errorMessage} banner closable />}\n\n        <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\n          <Form.Item name=\"password\" label=\"Password\">\n            <Input.Password />\n          </Form.Item>\n\n            <Form.Item\n              name=\"images\"\n              valuePropName=\"fileList\"\n              getValueFromEvent={normFile}\n              noStyle\n            >\n              <Upload.Dragger\n                name=\"files\"\n                beforeUpload={() => false}\n                accept=\"image/*\"\n              >\n                <p className=\"ant-upload-drag-icon\">\n                  <InboxOutlined />\n                </p>\n                <p className=\"ant-upload-text\">\n                  Click or drag file to this area to upload\n                </p>\n                <p className=\"ant-upload-hint\">\n                  Supports single or bulk upload.\n                </p>\n              </Upload.Dragger>\n            </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              span: 12,\n              offset: 6,\n            }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}